<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="
	    	http://www.springframework.org/schema/beans 
	   		http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
			http://www.springframework.org/schema/context
			http://www.springframework.org/schema/context/spring-context-2.5.xsd
			http://www.springframework.org/schema/aop 
			http://www.springframework.org/schema/aop/spring-aop-2.5.xsd"
	default-autowire="byName">


	<bean id="georepo-gs-property-configurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location" value="classpath:georepo-geoserver.properties" />
		<property name="ignoreResourceNotFound" value="True" />
	</bean>
	
	<!-- TODO: add authorization to these requests using the hints at
	     http://book.javanb.com/Professional-Java-Development-with-the-Spring-Framework/BBL0071.html 
	-->
	<!--
	    see if you can add some ehcache proxy interceptor when we switch to using remoted services
	-->
	
	<bean id="ruleReaderService" class="org.springframework.remoting.httpinvoker.HttpInvokerProxyFactoryBean" lazy-init="true">
        <property name="serviceUrl" value="${servicesUrl}"/>
        <property name="serviceInterface" value="it.geosolutions.georepo.services.RuleReaderService"/>
    </bean>

	<bean id="georeposityRuleAccessManager" class="it.geosolutions.georepository.GeorepositoryAccessManager">
		<constructor-arg index="0" ref="ruleReaderService" />
		<constructor-arg index="1" value="${instanceName}" />
	</bean>

</beans>
